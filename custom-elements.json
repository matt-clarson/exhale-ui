{
  "version": "experimental",
  "tags": [
    {
      "name": "ex-listbox",
      "path": "./components/listbox/listbox.ts",
      "description": "An implementation of the \"listbox\" role - https://www.w3.org/TR/wai-aria-1.1/#listbox.",
      "attributes": [
        {
          "name": "delimiter",
          "description": "The `delimiter` is used to delimit the `value` property.",
          "type": "string",
          "default": "\",\""
        },
        {
          "name": "forceSelect",
          "description": "Whether or not to force selection of options as a separate action.\nIf this is set, focusing on an option will not select it. You have to press \"Space\" to select the option.\nIf this is unset, focusing an option will select it.\nNote that this will be ignored if the `aria-multiselectable` attribute is set to `\"true\"`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-multiselectable",
          "description": "Sets whether the listbox is in single-select or multi-select mode.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-readonly",
          "description": "Sets the listbox to readonly mode - in readonly mode, the listbox will not allow selection of options.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "delimiter",
          "attribute": "delimiter",
          "description": "The `delimiter` is used to delimit the `value` property.",
          "type": "string",
          "default": "\",\""
        },
        {
          "name": "value",
          "description": "The `value` of the `Listbox` is a delimited list of all the values of selected `Option`s (see the `delimiter` property).\nNote, you cannot set the `value` property manually.",
          "type": "string"
        },
        {
          "name": "values",
          "description": "The `values` of the `Listbox` is all of the selected options as an array.",
          "type": "string[]"
        },
        {
          "name": "forceSelect",
          "attribute": "forceSelect",
          "description": "Whether or not to force selection of options as a separate action.\nIf this is set, focusing on an option will not select it. You have to press \"Space\" to select the option.\nIf this is unset, focusing an option will select it.\nNote that this will be ignored if the `aria-multiselectable` attribute is set to `\"true\"`.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "multiSelect",
          "attribute": "aria-multiselectable",
          "description": "Sets whether the listbox is in single-select or multi-select mode.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "readonly",
          "attribute": "aria-readonly",
          "description": "Sets the listbox to readonly mode - in readonly mode, the listbox will not allow selection of options.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "change",
          "description": "Fires when any `Option` in the `Listbox` fires a `change` event.\n         Note that this event is a separate event to that fired by the `Option`s."
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "Default slot should contain one or more {@link Option} elements."
        }
      ]
    },
    {
      "name": "ex-option",
      "path": "./components/shared/option.ts",
      "description": "An implementation of the \"option\" role - https://www.w3.org/TR/2010/WD-wai-aria-20100916/roles#option.",
      "attributes": [
        {
          "name": "value",
          "description": "The value of the option.",
          "type": "string | undefined"
        },
        {
          "name": "aria-selected",
          "description": "Indicates the selected state of the option.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "aria-disabled",
          "description": "Sets the option as disabled. If `true`, the option will not respond to any events.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "The value of the option.",
          "type": "string | undefined"
        },
        {
          "name": "selected",
          "attribute": "aria-selected",
          "description": "Indicates the selected state of the option.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "aria-disabled",
          "description": "Sets the option as disabled. If `true`, the option will not respond to any events.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "ex:optionselect",
          "description": "When the `ex:optionselect` is dispatched against an option, the option will change its `selected` property (`aria-selected`) to reflect the detail of the event.\n                  Event detail should be:\n                  ```\n                  {\n                      selected?: boolean,\n                      toggle?: boolean,\n                  }\n                  ```"
        },
        {
          "name": "change",
          "description": "When the `aria-selected` attribute changes, `Option` fires a `change` event.\n         Note that this is fired _after_ the `ex:optionselect` is fired, and will not fire if the `Option` is disabled."
        }
      ]
    }
  ]
}